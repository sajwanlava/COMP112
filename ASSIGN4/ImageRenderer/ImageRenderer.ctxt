#BlueJ class context
comment0.params=
comment0.target=ImageRenderer()
comment1.params=
comment1.target=void\ renderAFile()
comment2.params=fname
comment2.target=void\ renderImage(java.lang.String)
comment2.text=\r\n\ Renders\ a\ pnm\ image\ file\ with\ the\ given\ name.\r\n\ Renders\ the\ image\ at\ position\ (left,\ top).\r\n\ Each\ pixel\ of\ the\ image\ is\ rendered\ by\ a\ square\ of\ size\ pixelSize\r\n\ The\ first\ three\ tokens\ (other\ than\ comments)\ are\r\n\ \ \ \ the\ magic\ number\ (P1,\ P2,\ or\ P3),\r\n\ \ \ \ number\ of\ columns,\ (integer)\r\n\ \ \ \ number\ of\ rows,\ \ (integer)\r\n\ ppm\ and\ pgm\ files\ then\ have\ \r\n\ \ \ \ colour\ depth\ \ (integer\:\ range\ of\ possible\ color\ values)\r\n\ The\ remaining\ tokens\ are\ the\ pixel\ values\r\n\ \ (0\ or\ 1\ for\ pbm,\ single\ integer\ for\ pgm;\ red,\ green,\ and\ blue\ integers\ for\ ppm)\r\n\ There\ may\ be\ comments\ anywhere\ in\ the\ file,\ which\ start\ with\ \#\ and\ go\ to\ the\ end\ of\ the\ line.\ Comments\ should\ be\ ignored.\r\n\ The\ image\ may\ be\ "animated",\ in\ which\ case\ the\ file\ contains\ a\ sequence\ of\ images\r\n\ (ideally,\ but\ not\ necessarily,\ the\ same\ type\ and\ size),\ which\ should\ be\ rendered\r\n\ in\ sequence.\r\n\ This\ method\ should\ read\ the\ magic\ number\ then\ call\ the\ appropriate\ method\ for\ rendering\ the\ rest\ of\ the\ image\r\n
comment3.params=temp
comment3.target=int\ colorVal(int)
comment4.params=args
comment4.target=void\ main(java.lang.String[])
numComments=5
